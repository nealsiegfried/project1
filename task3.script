Script started on Fri 30 Aug 2019 05:47:02 PM CDT
[?1034hbash-4.2$ ls
commands.script  cpuinfo.txt  interrupts.txt  lspci.txt  meminfo.txt  simple  simple.c	task1.script  task2.script  task3.script  testing  testing.c  wos0005
bash-4.2$ gcc -v
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/4.8.5/lto-wrapper
Target: x86_64-redhat-linux
Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-linker-hash-style=gnu --enable-languages=c,c++,objc,obj-c++,java,fortran,ada,go,lto --enable-plugin --enable-initfini-array --disable-libgcj --with-isl=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/isl-install --with-cloog=/builddir/build/BUILD/gcc-4.8.5-20150702/obj-x86_64-redhat-linux/cloog-install --enable-gnu-indirect-function --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux
Thread model: posix
gcc version 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC) 
bash-4.2$ gcc -g -lm -o imple[K[K[K[K[Ksip[Kmple simple.c
bash-4.2$ man ldd
[?1049h[?1h=LDD(1)                                                                      Linux Programmer's Manual                                                                     LDD(1)[m
[m
[1mNAME[0m[m
       ldd - print shared library dependencies[m
[m
[1mSYNOPSIS[0m[m
       [1mldd[0m [OPTION]... FILE...[m
[m
[1mDESCRIPTION[0m[m
       [1mldd[0m prints the shared libraries required by each program or shared library specified on the command line.[m
[m
   [1mSecurity[0m[m
       In the usual case, [1mldd[0m invokes the standard dynamic linker (see [1mld.so[0m(8)) with the [1mLD_TRACE_LOADED_OBJECTS[0m environment variable set to 1, which causes the linker to dis‐[m
       play the library dependencies.  Be aware, however, that in some circumstances, some versions of [1mldd[0m may attempt to obtain the dependency information by directly  execut‐[m
       ing the program.  Thus, you should [4mnever[24m employ [1mldd[0m on an untrusted executable, since this may result in the execution of arbitrary code.  A safer alternative when deal‐[m
       ing with untrusted executables is:[m
[m
           $ objdump -p /path/to/program | grep NEEDED[m
[m
[1mOPTIONS[0m[m
       [1m--version[0m[m
              Print the version number of [1mldd[0m.[m
[m
       [1m-v[0m [1m--verbose[0m[m
              Print all information, including, for example, symbol versioning information.[m
[m
       [1m-u[0m [1m--unused[0m[m
              Print unused direct dependencies.  (Since glibc 2.3.4.)[m
[m
       [1m-d[0m [1m--data-relocs[0m[m
              Perform relocations and report any missing objects (ELF only).[m
[m
       [1m-r[0m [1m--function-relocs[0m[m
              Perform relocations for both data objects and functions, and report any missing objects or functions (ELF only).[m
[m
       [1m--help[0m Usage information.[m
[m
[1mNOTES[0m[m
       The standard version of [1mldd[0m comes with glibc2.  Libc5 came with an older version, still present on some systems.  The long options are not supported by  the  libc5  ver‐[m
       sion.  On the other hand, the glibc2 version does not support [1m-V[0m and only has the equivalent [1m--version[0m.[m
[m
       The  libc5  version  of  this program will use the name of a library given on the command line as-is when it contains a '/'; otherwise it searches for the library in the[m
       standard locations.  To run it on a shared library in the current directory, prefix the name with "./".[m
[m
[1mBUGS[0m[m
       [1mldd[0m does not work on a.out shared libraries.[m
[m
       [1mldd[0m does not work with some extremely old a.out programs which were built before [1mldd[0m support was added to the compiler releases.  If you use [1mldd[0m on  one  of  these  pro‐[m
       grams, the program will attempt to run with [4margc[24m = 0 and the results will be unpredictable.[m
[m
[1mSEE[0m [1mALSO[0m[m
       [1mld.so[0m(8), [1mldconfig[0m(8)[m
[m
[1mCOLOPHON[0m[m
       This  page  is  part  of  release  3.53  of  the  Linux  [4mman-pages[24m  project.   A  description  of  the  project,  and  information  about reporting bugs, can be found at[m
[7m Manual page ldd(1) line 1 (press h for help or q to quit)[27m[K[K[?1l>[?1049lbash-4.2$ ldd simple
	linux-vdso.so.1 =>  (0x00007fffab1f3000)
	libm.so.6 => /lib64/libm.so.6 (0x00007f82ae528000)
	libc.so.6 => /lib64/libc.so.6 (0x00007f82ae15b000)
	/lib64/ld-linux-x86-64.so.2 (0x00007f82ae82a000)
bash-4.2$ gdb run simple
[?1034hGNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-114.el7
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
run: No such file or directory.
"/home/u2/wos0005/COMP3500/simple" is not a core dump: File format not recognized
warning: File "/home/u2/wos0005/COMP3500/.gdbinit" auto-loading has been declined by your `auto-load safe-path' set to "$debugdir:$datadir/auto-load:/usr/bin/mono-gdb.py".
To enable execution of this file add
	add-auto-load-safe-path /home/u2/wos0005/COMP3500/.gdbinit
line to your configuration file "/home/u2/wos0005/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/home/u2/wos0005/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
(gdb) ile [K[K[K[Kfile simple
Reading symbols from /home/u2/wos0005/COMP3500/simple...done.
(gdb) reak [K[K[K[K[Kbreak main
Breakpoint 1 at 0x400595: file simple.c, line 6.
(gdb) break sqrt
Breakpoint 2 at 0x400480
(gdb) info registers
The program has no registers now.
(gdb) r
Starting program: /home/u2/wos0005/COMP3500/simple 

Breakpoint 1, main () at simple.c:6
6	   double doubleArray[] = {18, 43, 12, 89, 6, 22, 56, 91, 102, 40};
(gdb) s
9	    int i = 0;
(gdb) n
11	   for (i; i < 10; i++) {
(gdb) c
Continuing.

Breakpoint 2, __sqrt (x=18) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) continue
Continuing.

Breakpoint 2, __sqrt (x=43) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) continue
Continuing.

Breakpoint 2, __sqrt (x=12) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) contine[Kue
Continuing.

Breakpoint 2, __sqrt (x=89) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) continue
Continuing.

Breakpoint 2, __sqrt (x=6) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) net[Kxt
30	  return __ieee754_sqrt (x);
(gdb) next
31	}
(gdb) continue
Continuing.

Breakpoint 2, __sqrt (x=22) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) next
30	  return __ieee754_sqrt (x);
(gdb) next
31	}
(gdb) next
main () at simple.c:11
11	   for (i; i < 10; i++) {
(gdb) next
12	      sumOfSqrts += sqrt(doubleArray[i]);
(gdb) next

Breakpoint 2, __sqrt (x=56) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) next
30	  return __ieee754_sqrt (x);
(gdb) next
31	}
(gdb) next
main () at simple.c:11
11	   for (i; i < 10; i++) {
(gdb) next
12	      sumOfSqrts += sqrt(doubleArray[i]);
(gdb) next

Breakpoint 2, __sqrt (x=91) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) next
30	  return __ieee754_sqrt (x);
(gdb) next
31	}
(gdb) next
main () at simple.c:11
11	   for (i; i < 10; i++) {
(gdb) next
12	      sumOfSqrts += sqrt(doubleArray[i]);
(gdb) next

Breakpoint 2, __sqrt (x=102) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) next
30	  return __ieee754_sqrt (x);
(gdb) next
31	}
(gdb) next
main () at simple.c:11
11	   for (i; i < 10; i++) {
(gdb) next
12	      sumOfSqrts += sqrt(doubleArray[i]);
(gdb) next

Breakpoint 2, __sqrt (x=40) at w_sqrt.c:27
27	  if (__builtin_expect (isless (x, 0.0), 0) && _LIB_VERSION != _IEEE_)
(gdb) next
30	  return __ieee754_sqrt (x);
(gdb) next
31	}
(gdb) next
main () at simple.c:11
11	   for (i; i < 10; i++) {
(gdb) next
15	   averageSqrt = sumOfSqrts / 10;
(gdb) next
17	   printf("%f", averageSqrt);
(gdb) next[Kcontinue
Continuing.
6.428483[Inferior 1 (process 19663) exited normally]
(gdb) e[Kq
bash-4.2$ exit
exit

Script done on Fri 30 Aug 2019 05:50:17 PM CDT
